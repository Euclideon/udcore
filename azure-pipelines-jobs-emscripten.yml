parameters:
  name: ''
  displayName: ''
  emsdkVersion: ''

jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    platform: Emscripten
  strategy:
    matrix:
      Debug:
        configuration: Debug
      Release:
        configuration: Release
  ${{ if eq(parameters.emsdkVersion, 'latest') }}:
    continueOnError: true
  steps:
  - checkout: self
    submodules: recursive
  - bash: pip3 install selenium
    displayName: 'Install Dependencies'
  - script: |
      git clone https://github.com/emscripten-core/emsdk.git
      pushd ./emsdk
      ./emsdk install ${{ parameters.emsdkVersion }}
      ./emsdk activate ${{ parameters.emsdkVersion }}
      source ./emsdk_env.sh
      popd
    displayName: 'Configure Emscripten Environment'
  - script: bin/premake-bin/premake5 gmake2 --os=emscripten
    displayName: 'Run Premake'
  - script: make -j4 config=$(echo ${CONFIGURATION}_${PLATFORM} | tr [:upper:] [:lower:])
    displayName: 'Build Projects'
    env:
      EMSDK: $(Build.SourcesDirectory)/emsdk
      PATH: $(PATH):$(Build.SourcesDirectory)/emsdk:$(Build.SourcesDirectory)/emsdk/upstream/emscripten
  - script: |
      mkdir www
      cp Output/bin/${CONFIGURATION}_${PLATFORM}/udTest.* www
      cp udTest/udTest.html www
      cp udTest/server.py www
      pushd www
      python3 server.py 8000 </dev/null &>/dev/null &
      popd
      python3 ./udTest/webtest.py chrome
    displayName: 'Run Chrome Tests'
  - script: |
      mkdir www
      cp Output/bin/${CONFIGURATION}_${PLATFORM}/udTest.* www
      cp udTest/udTest.html www
      cp udTest/server.py www
      pushd www
      python3 server.py 8000 </dev/null &>/dev/null &
      popd
      python3 ./udTest/webtest.py firefox
    displayName: 'Run Firefox Tests'
