#include "udInput_Internal.h"

#include "udPlatform.h"
#include "udPlatformUtil.h"

#pragma warning(disable:4505) //  unreferenced local function has been removed - a warning generated by freeglut

#define FREEGLUT_STATIC
#define FREEGLUT_LIB_PRAGMAS 0
#include "GL/freeglut.h"

static unsigned char fkeysToUDKey[] =
{
  udKC_F1,
  udKC_F2,
  udKC_F3,
  udKC_F4,
  udKC_F5,
  udKC_F6,
  udKC_F7,
  udKC_F8,
  udKC_F9,
  udKC_F10,
  udKC_F11,
  udKC_F12
};

static unsigned char specialToUDKey[] =
{
  udKC_Left,
  udKC_Up,
  udKC_Right,
  udKC_Down,
  udKC_PageUp,
  udKC_PageDown,
  udKC_Home,
  udKC_End,
  udKC_Insert
};


InputState gInputAccum;

// --------------------------------------------------------
// Author: Manu Evans, March 2015
static void KeyPressedFunc(unsigned char key, int, int)
{
  if(udAsciiToUDKey[key] != udKC_Unknown)
    gInputAccum.keys[0][udAsciiToUDKey[key]] = 1;
}

// --------------------------------------------------------
// Author: Manu Evans, March 2015
static void KeyReleasedFunc(unsigned char key, int, int)
{
  if(udAsciiToUDKey[key] != udKC_Unknown)
    gInputAccum.keys[0][udAsciiToUDKey[key]] = 0;
}

// --------------------------------------------------------
// Author: Manu Evans, March 2015
static void SpecialKeyPressedFunc(int key, int, int)
{
  if(key >= GLUT_KEY_F1 && key <= GLUT_KEY_F12)
    gInputAccum.keys[0][fkeysToUDKey[key - GLUT_KEY_F1]] = 1;
  else if(key >= GLUT_KEY_LEFT && key <= GLUT_KEY_INSERT)
    gInputAccum.keys[0][specialToUDKey[key - GLUT_KEY_LEFT]] = 1;
}

// --------------------------------------------------------
// Author: Manu Evans, March 2015
static void SpecialKeyReleasedFunc(int key, int, int)
{
  if(key >= GLUT_KEY_F1 && key <= GLUT_KEY_F12)
    gInputAccum.keys[0][fkeysToUDKey[key - GLUT_KEY_F1]] = 0;
  else if(key >= GLUT_KEY_LEFT && key <= GLUT_KEY_INSERT)
    gInputAccum.keys[0][specialToUDKey[key - GLUT_KEY_LEFT]] = 0;
}

// --------------------------------------------------------
// Author: Manu Evans, March 2015
static void MouseFunc(int button, int state, int x, int y)
{
  if (button >= 0 && button < 4)
    gInputAccum.mouse[0][udMC_LeftButton + button] = state == GLUT_DOWN ? 1.f : 0.f;
  gInputAccum.mouse[0][udMC_XAbsolute] = (float)x;
  gInputAccum.mouse[0][udMC_YAbsolute] = (float)y;
}

// --------------------------------------------------------
// Author: Manu Evans, March 2015
static void PassiveMotionFunc(int x, int y)
{
  gInputAccum.mouse[0][udMC_XAbsolute] = (float)x;
  gInputAccum.mouse[0][udMC_YAbsolute] = (float)y;
}

// --------------------------------------------------------
// Author: Manu Evans, March 2015
void udInput_InitInternal()
{
  memset(&gInputAccum, 0, sizeof(gInputAccum));

  glutKeyboardFunc(KeyPressedFunc);
  glutKeyboardUpFunc(KeyReleasedFunc);
  glutSpecialFunc(SpecialKeyPressedFunc);
  glutSpecialUpFunc(SpecialKeyReleasedFunc);
  glutMouseFunc(MouseFunc);
  glutMotionFunc(PassiveMotionFunc);
  glutPassiveMotionFunc(PassiveMotionFunc);
}

// --------------------------------------------------------
// Author: Manu Evans, March 2015
void udInput_UpdateInternal()
{
  InputState &input = gInputState[gCurrentInputState];
  InputState &prev = gInputState[1 - gCurrentInputState];

  input = gInputAccum;

  // update deltas
  input.mouse[0][udMC_XDelta] = input.mouse[0][udMC_XAbsolute] - prev.mouse[0][udMC_XAbsolute];
  input.mouse[0][udMC_YDelta] = input.mouse[0][udMC_YAbsolute] - prev.mouse[0][udMC_YAbsolute];

  // poll gamepads
  //...

  // Fix up numpad
  input.keys[0][udKC_NumpadMinus]   = input.keys[0][udKC_Hyphen];
  input.keys[0][udKC_NumpadDivide]  = input.keys[0][udKC_ForwardSlash];
  input.keys[0][udKC_NumpadDecimal] = input.keys[0][udKC_Period];
  input.keys[0][udKC_NumpadEnter]   = input.keys[0][udKC_Enter];

  input.keys[0][udKC_Numpad0]   = input.keys[0][udKC_0];
  input.keys[0][udKC_Numpad1]   = input.keys[0][udKC_1];
  input.keys[0][udKC_Numpad2]   = input.keys[0][udKC_2];
  input.keys[0][udKC_Numpad3]   = input.keys[0][udKC_3];
  input.keys[0][udKC_Numpad4]   = input.keys[0][udKC_4];

  input.keys[0][udKC_Numpad5]   = input.keys[0][udKC_5];
  input.keys[0][udKC_Numpad6]   = input.keys[0][udKC_6];
  input.keys[0][udKC_Numpad7]   = input.keys[0][udKC_7];
  input.keys[0][udKC_Numpad8]   = input.keys[0][udKC_8];
  input.keys[0][udKC_Numpad9]   = input.keys[0][udKC_9];


}
